version: '2'
services:

  akhq:
    # build:
    #   context: .
    image: tchiotludo/akhq
    logging:
      driver: none
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              schema-registry:
                url: "http://schema-registry:8085"
              connect:
                - name: "connect"
                  url: "http://connect:8083"

    ports:
      - 8080:8080
    links:
      - kafka
      - schema-registry
      
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    logging:
      driver: none
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.5.0
    logging:
      driver: none
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MAX_REQUEST_SIZE: 500000000       
      KAFKA_MESSAGE_MAX_BYTES: 500000000       
      KAFKA_MAX_PARTITION_FETCH_BYTES: 500000000       
      KAFKA_PRODUCER_MESSAGE_MAX_BYTES: 500000000
  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    logging:
      driver: none
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "9081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
  kafdrop:
    image: obsidiandynamics/kafdrop
    logging:
      driver: none
    ports:
      - "9001:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
      
  minio:
    image: minio/minio
    logging:
      driver: none
    volumes:
      - /home/basis/Repositories/PR/codex-docker/minio/minimo-data/minio:/data
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - MINIO_HTTP_TRACE=/tmp/minio.log
    command: server /data/minio
      
  neo4j:
    image: neo4j:4.2.4
    logging:
      driver: none
    container_name : codex_neo4j
    ports:
    - "7474:7474"
    - "7687:7687"
    volumes:
      - /home/basis/Repositories/PR/codex-docker/neo4j/neo4j_volume/data:/data
      - /home/basis/Repositories/PR/codex-docker/neo4j/neo4j_volume/logs:/logs
      - /home/basis/Repositories/PR/codex-docker/neo4j/neo4j_volume/import:/var/lib/neo4j/import
      - /home/basis/Repositories/PR/codex-docker/neo4j/neo4j_volume/plugins:/var/lib/neo4j/plugins
    environment:
      - NEO4J_AUTH=neo4j/123456
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_security_procedures_whitelist=gds.*, apoc.*
      - NEO4J_dbms_security_procedures_unrestricted=gds.*, apoc.*
      - NEO4J_apoc_import_file_enabled=true
                  
  codex_ontologias_conceituacao_norma:
      build: ./
      environment:
          NEO4J_HOST: "localhost"
          NEO4J_PORT: "7474"
          NEO4J_SCHEME: "neo4j"
          NEO4J_USER: "neo4j"
          NEO4J_PASSWORD: "123456"
          KAFKA_HOST: "kafka:29092"
          KAFKA_QUEUE: "codex-particula-normativa-nbex-elastic"
          KAFKA_QUEUE_RESP: "codex-calc-centralidade"
          PATH_BASE: "/service/"
          PATH_LOG: "scripts/log/log.log"
          PATH_MODEL_ONTO_NER: 'model/ner-subtermos/'
          PATH_MODEL_DICIONAR: 'model/classificador-txt-dicionaristico-v3/'
          PATH_DATA_NORMAS: "data/tmp_normas"
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: '123456'
          POSTGRES_HOST: 'localhost'
          POSTGRES_PORT: '5432'
          POSTGRES_DB: 'dboracodex'
          MINIO_HOST: "minio:9000"
          MINIO_ACCESS_KEY: "AKIAIOSFODNN7EXAMPLE"
          MINIO_SECRET_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
          MINIO_BUCKET_INPUT: "codex"
      depends_on:
          - kafka
          - minio
          - neo4j
